name: Build Ubuntu Kernel
on:
  push:
  schedule:
    - cron: '0 0 * * *'
jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Set kernel version and tag
        id: tag
        run: |
          sudo apt update
          UBUNTU_KERNEL_VERSION="$(sudo apt list '?name(linux-image-[[:digit:]]+.[[:digit:]]+.[[:digit:]]+-[[:digit:]]+-generic)' | awk -F' ' '{print $2}' | tail -n1)"
          UBUNTU_TAG="Ubuntu-$UBUNTU_KERNEL_VERSION"
          echo "UBUNTU_KERNEL_VERSION=$UBUNTU_KERNEL_VERSION" >> $GITHUB_OUTPUT
          echo "UBUNTU_TAG=$UBUNTU_TAG" >> $GITHUB_OUTPUT

      - name: Restore artifacts cache
        uses: actions/cache/restore@v4
        id: restore-artifacts
        with:
          path: kernel/*.deb
          key: ${{ runner.os }}-ubuntu-kernel-${{ steps.tag.outputs.UBUNTU_KERNEL_VERSION }}-artifacts

      - name: Restore kernel source repo cache
        id: restore-kernel
        if: steps.restore-artifacts.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v4
        with:
          path: kernel/noble
          key: ${{ runner.os }}-ubuntu-kernel-${{ steps.tag.outputs.UBUNTU_KERNEL_VERSION }}

      - name: Checkout Ubuntu kernel
        id: checkout-kernel
        if: steps.restore-kernel.outcome == 'success' && steps.restore-kernel.outputs.cache-hit != 'true'
        env:
          UBUNTU_TAG: ${{ steps.tag.outputs.UBUNTU_TAG }}
        run: |
          git clone --depth 1 --branch $UBUNTU_TAG git://git.launchpad.net/~ubuntu-kernel/ubuntu/+source/linux/+git/noble kernel/noble

      - name: Cache Ubuntu kernel repo
        uses: actions/cache/save@v4
        with:
          path: kernel/noble
          key: ${{ runner.os }}-ubuntu-kernel-${{ steps.tag.outputs.UBUNTU_KERNEL_VERSION }}

      - name: Checkout kernel patches
        if: steps.restore-artifacts.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: pathes

      - name: Install dependencies
        if: steps.restore-artifacts.outputs.cache-hit != 'true'
        run: |
          sudo apt install libncurses-dev gawk flex bison openssl libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf llvm debhelper

      - name: Configure Ubuntu kernel
        if: steps.restore-artifacts.outputs.cache-hit != 'true'
        continue-on-error: true
        env:
          LOCAL_VERSION: +tscfix
        run: |
          git apply -p1 --directory=kernel/noble --verbose pathes/patches/0020*.patch
          cd kernel/noble
          sed -i "1{s/)/${LOCAL_VERSION})/}" debian.master/changelog
          fakeroot debian/rules clean
          fakeroot debian/rules updateconfigs

      - name: Build Ubuntu kernel
        if: steps.restore-artifacts.outputs.cache-hit != 'true'
        run: |
          cd kernel/noble
          fakeroot debian/rules binary-headers binary-generic

      - name: Cache artifacts
        uses: actions/cache/save@v4
        with:
          path: kernel/*.deb
          key: ${{ runner.os }}-ubuntu-kernel-${{ steps.tag.outputs.UBUNTU_KERNEL_VERSION }}-artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-kernel-noble-${{ steps.tag.outputs.UBUNTU_KERNEL_VERSION }}
          path: kernel/*.deb
          overwrite: true

      # Use tmate to debug 'cache clean up' if needed
      # - uses: mxschmitt/action-tmate@v3
      # - name: Clean up caches
      #   run: |
      #     gh extension install actions/gh-actions-cache
      #     echo "Fetching list of cache keys..."
      #     gh cache list
